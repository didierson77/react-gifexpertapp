{"version":3,"sources":["componentes/AddCategory.js","auxiliares/obtenerGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","valorInput","setvalorInput","onSubmit","e","preventDefault","trim","length","categs","type","value","onChange","target","obtenerGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","titulo","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","cargando","state","setState","useEffect","then","imgs","useFetchGifs","imagenes","console","log","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAqB5C,OACI,uBAAMC,SAZY,SAACC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAM,OAAGP,GAAH,mBAAiBO,OACrCN,EAAc,MAQlB,UACI,6BAAKD,IACL,uBACAQ,KAAK,OACLC,MAAOT,EACPU,SAvBkB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,c,+BCRlBG,EAAW,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DAEfC,EAFe,iDAE+BC,UAAUH,GAFzC,+DAGHI,MAAMF,GAHH,cAGfG,EAHe,gBAIDA,EAAKC,OAJJ,uBAIdC,EAJc,EAIdA,KAEDC,EAAKD,EAAKE,KAAK,SAAAC,GAAM,IAAD,EAClB,MAAM,CACEC,GAAQD,EAAIC,GACZC,OAAQF,EAAIG,MACZX,IAAG,UAAKQ,EAAII,cAAT,aAAK,EAAYC,iBAAiBb,QAVhC,kBAedM,GAfc,4CAAD,sDCAXQ,EAAc,SAAC,GAAqB,EAApBL,GAAqB,IAAjBC,EAAgB,EAAhBA,OAAOV,EAAS,EAATA,IAGpC,OACI,sBAAKe,UAAU,4CAAf,UACI,qBAAKC,IAAKhB,EAAKiB,IAAKP,IACpB,4BAAIA,QCFHQ,EAAU,SAAC,GAAiB,IAAhBpB,EAAe,EAAfA,UAAe,ECAZ,SAACA,GAAe,IAAD,EACbd,mBACtB,CACIqB,KAAK,GACLc,UAAS,IAJsB,mBAChCC,EADgC,KACzBC,EADyB,KAmBnC,OAXAC,qBAAU,WACNzB,EAAYC,GACHyB,MAAK,SAAAC,GAEFH,EAAS,CACLhB,KAAKmB,EACLL,UAAS,SAG3B,CAACrB,IAEKsB,EDlBoBK,CAAa3B,GAAjC4B,EADwB,EAC7BrB,KAAcc,EADe,EACfA,SAGrB,OACA,qCACI,oBAAIJ,UAAU,6CAAd,SAA4DjB,IAE3DqB,GAAY,mBAAGJ,UAAU,4CAAb,yBACZY,QAAQC,IAAI,mBAAmBF,GAChC,qBAAKX,UAAU,aAAf,SAEYW,EAASnB,KAAI,SAACC,GACX,OAAO,cAAC,EAAD,eAEGA,GADAA,EAAIC,aEbxBoB,EAAe,WAAM,MAGM7C,mBAAS,CAAC,cAHhB,mBAGvB8C,EAHuB,KAGX/C,EAHW,KAa9B,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEI,6BAEI+C,EAAWvB,KAAI,SAACT,GAEb,OAAO,cAAC,EAAD,CAEEA,UAAWA,GADNA,Y,MCvBrCiC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.abcb2565.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    const [valorInput, setvalorInput] = useState('');\r\n\r\n    const manejadorValorInput=(e)=>{\r\n        // console.log(e.target.value);\r\n        setvalorInput(e.target.value);\r\n    }\r\n\r\n\r\n    const manejadorSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(valorInput.trim().length>2){\r\n            setCategorias(categs=>[valorInput,...categs]);\r\n            setvalorInput('');\r\n\r\n        }\r\n        //console.log('Submit hecho');\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={manejadorSubmit}>  \r\n            <h1>{valorInput}</h1>\r\n            <input \r\n            type='text'\r\n            value={valorInput}\r\n            onChange={manejadorValorInput}\r\n            >\r\n            </input>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes={\r\n    setCategorias:PropTypes.func.isRequired\r\n};","\r\n\r\nexport const obtenerGifs=async(categoria)=>{\r\n        \r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=SlRMGX0O1TB9brqtcvj22BE3Ih9bdwwl`;\r\n    const resp= await fetch(url);\r\n    const {data}= await resp.json();\r\n\r\n    const gifs=data.map( img=>{\r\n            return{\r\n                    id:     img.id,\r\n                    titulo: img.title,\r\n                    url:    img.images?.downsized_medium.url,\r\n\r\n            }\r\n    });\r\n\r\n    return gifs;\r\n    // console.log(data);\r\n    //console.log(gifs);\r\n    // setImages(gifs);\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, titulo,url}) => {\r\n    //const imagen=props.img;\r\n    //console.log(id,titulo,url);\r\n    return (\r\n        <div className=\"tarjeta animate__animated animate__fadeIn\">\r\n            <img src={url} alt={titulo}></img>\r\n            <p>{titulo}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n// import { obtenerGifs } from '../auxiliares/obtenerGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n    const {data:imagenes,cargando}= useFetchGifs(categoria);\r\n\r\n\r\n    return (\r\n    <>       \r\n        <h3 className=\"cargando animate__animated animate__fadeIn\">{categoria}</h3>\r\n        {/* {cargando ? 'Cargando...' : 'Datos Cargados'} */}\r\n        {cargando && <p className=\"cargando animate__animated animate__flash\">Cargando...</p>}\r\n        {console.log('Data en GrifGrid',imagenes)}\r\n        <div className=\"gridCartas\">\r\n                {\r\n                    imagenes.map((img)=>{ \r\n                       return <GifGridItem \r\n                            key={img.id}        \r\n                            { ...img } />;\r\n                        // return <li key={id}>{titulo}</li>;\r\n                    })\r\n                }\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\n\r\nimport {obtenerGifs} from '../auxiliares/obtenerGifs';\r\n\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setState] = useState(\r\n        {\r\n            data:[],\r\n            cargando:true,\r\n        });\r\n\r\n        //para que solo se ejecute una vez y cuando cambie \r\n        useEffect(()=>{\r\n            obtenerGifs(categoria)\r\n                    .then(imgs=>{\r\n                        // console.log(imgs);\r\n                        setState({\r\n                            data:imgs,\r\n                            cargando:false,\r\n                        })\r\n            });\r\n        },[categoria]);\r\n        // console.log('State:',state);\r\n        return  state; //{data:[],cargando:true}\r\n}\r\n","// snippet rafc\r\n\r\nimport React, { useState } from 'react'\r\n\r\nimport { AddCategory } from './componentes/AddCategory';\r\nimport { GifGrid } from './componentes/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categorias=['One Punch','Samurai X','Dragon Ball'];\r\n    const [categorias, setCategorias] = useState(['One Punch']);\r\n\r\n    // const handleAgregar=()=>{\r\n    //     // categorias.push('HunterXHunter');\r\n    //     //solucion 1\r\n    //     // setCategorias([...categorias,'HunterXHunter']);\r\n    //     //solucion 2\r\n    //     setCategorias(categs=>[...categs,'HunterXHunter']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpert App</h2>\r\n            <AddCategory setCategorias={setCategorias} ></AddCategory>\r\n            <hr></hr>\r\n            {/* <button onClick={handleAgregar} >Agregar</button> */}\r\n                <ol>\r\n                {\r\n                    categorias.map((categoria)=>{\r\n                        // return <li key={categoria}>{categoria}</li>;\r\n                       return <GifGrid \r\n                                key={categoria} \r\n                                categoria={categoria} \r\n                            />;\r\n                    })\r\n                }\r\n                </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}